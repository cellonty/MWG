import random
from commands.db import getname, getonlibalance, getstatus
from commands.main import geturl
from commands.main import win_luser
from commands.games.gdb import *


async def darts_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã {rloser}')
        return
    if balance >= summ:
        if summ >= 10:
            gt = await gametime(user_id)
            if gt == 1:
                await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')  # {round(left1)}
                return

            rx1 = await message.reply_dice(emoji="üéØ")
            rx = rx1.dice.value

            if int(rx) == 5:
                await message.answer(f'{url}, –≤—ã –±—ã–ª–∏ –Ω–∞ –≤–æ–ª–æ—Å–∫–µ –æ—Ç –ø–æ–±–µ–¥—ã! üéØ\nüí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏! (—Ö1)')
            elif int(rx) == 6:
                c = Decimal(summ * 2)
                c2 = round(c)
                c2 = '{:,}'.format(c2)
                await gXX(user_id, summ, c)
                await message.answer(f'{url}, –≤ —è–±–ª–æ—á–∫–æ! üéØ\nüí∞ –í–∞—à –ø—Ä–∏–∑: {c2}$!')
            else:
                await gXX(user_id, summ, 0)
                await message.answer(f'{rloser} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –í–∞—à–∞ –ø–æ–±–µ–¥–∞ —É—Å–∫–æ–ª—å–∑–Ω—É–ª–∞ –æ—Ç –í–∞—Å! üéØÔ∏è')

        else:
            await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}')
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ {rloser}')


async def kybik_game_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)

    try:
        ch1 = message.text.split()[1]
        ch = int(ch1)
        summ = message.text.split()[2].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        await message.answer(f'{rloser} | –û—à–∏–±–∫–∞. –í—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã.')
        return

    if ch in range(1, 7):
        if balance >= summ:
            if summ >= 10:
                gt = await gametime(user_id)
                if gt == 1:
                    await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')
                    return

                rx1 = await message.reply_dice(emoji="üé≤")
                rx = rx1.dice.value

                if int(rx) == ch:
                    c = Decimal(summ * 4)
                    c2 = round(c)
                    c2 = '{:,}'.format(c2).replace(',', '.')
                    await gXX(user_id, summ, c)
                    await message.answer(f'{rwin} | –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ. –í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª - {c2}$')
                    return
                else:
                    await gXX(user_id, summ, 0)
                    await message.answer(f'{rwin} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ! üé≤')
                    return

            else:
                await message.answer(f'{rloser} | –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10.')
        else:
            await message.answer(f'{rloser} | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.')
    else:
        t = '–º–µ–Ω—å—à–µ 0' if ch < 1 else '–±–æ–ª—å—à–µ 6'
        await message.answer(f'{rloser} | –û—à–∏–±–∫–∞. –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ —á–∏—Å–ª–æ {t}.')


async def basketbol_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    user_id = message.from_user.id

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        await message.reply(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã üòû')
        return

    if balance < summ:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ üòï')
        return

    gt = await gametime(user_id)
    if gt == 1:
        await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')
        return

    if summ >= 10:
        rx1 = await message.reply_dice(emoji="üèÄ")
        rx = rx1.dice.value

        if int(rx) == 5:
            c = Decimal(summ * 2)
            c2 = round(c)
            c2 = '{:,}'.format(c2)
            await gXX(user_id, summ, c)
            await message.answer(f'{url}, –º—è—á –≤ –∫–æ–ª—å—Ü–µ, —É—Ä–∞! üèÄ\nüí∞ –í–∞—à –ø—Ä–∏–∑: {c2}$!')

        elif int(rx) == 4:
            await message.answer(f'{url}, –±—Ä–æ—Å–æ–∫ –æ–∫–∞–∑–∞–ª—Å—è –Ω–∞ –≥—Ä–∞–Ω–∏ —Ñ–æ–ª–∞! üèÄ\nüí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏! (—Ö1)')
        else:
            await gXX(user_id, summ, 0)
            await message.answer(f'{rwin} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –∫–æ–ª—å—Ü–æ! üèÄ')
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}')


async def bowling_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    result = await win_luser()
    rwin, rloser = result
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    user_id = message.from_user.id

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        await message.reply(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã üòû')
        return

    if balance < summ:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ üòï')
        return

    gt = await gametime(user_id)
    if gt == 1:
        await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')
        return

    if summ >= 10:
        rx1 = await message.reply_dice(emoji="üé≥Ô∏è")
        rx = rx1.dice.value

        if int(rx) == 6:
            c = Decimal(summ * 2)
            c2 = round(c)
            c2 = '{:,}'.format(c2)
            await gXX(user_id, summ, c)
            await message.answer(f'{url}, —Å—Ç—Ä–∞–π–∫! –ü–æ–ª–Ω–∞—è –ø–æ–±–µ–¥–∞! üé≥Ô∏è\nüí∞ –í–∞—à –ø—Ä–∏–∑: {c2}$!')

        elif int(rx) == 5:
            await message.answer(f'{url}, —Ç–∞–∫ –±–ª–∏–∑–∫–æ –∫ –ø–æ–±–µ–¥–µ! üé≥\nüí∞ –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏! (—Ö1)')
        else:
            await gXX(user_id, summ, 0)
            await message.answer(f'{rwin} | –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –º–∏–º–æ –≤—Å–µ—Ö –∫–µ–≥–ª–µ–π! üé≥')
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}')


async def game_casino(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    rwin, rloser = await win_luser()
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    user_id = message.from_user.id

    coff_dict = {
        0: [2, 1.75, 1.5, 1.25, 0.75, 0.5, 0.25, 0.1],
        1: [2, 1.75, 1.5, 1.25, 0.75, 0.5, 0.25],
        2: [2.25, 2, 1.75, 1.5, 1.25, 0.75, 0.5],
        3: [2.5, 2, 1.75, 1.5, 1.25, 0.75, 0.5],
        4: [2.5, 2, 0.5]
    }

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        return await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã {rloser}')

    if balance < summ:
        return await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ {rloser}')

    gt = await gametime(user_id)
    if gt == 1:
        await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')
        return

    if summ >= 10:
        status = await getstatus(user_id)
        coff = coff_dict.get(status, coff_dict[0])
        x = random.choice(coff)

        c = int(summ * x)
        c2 = '{:,}'.format(c).replace(',', '.')
        txt = f'{url}, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {c2}$ (x{x})  {rwin}' if x > 1 else f'{url}, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {c2}$ (x{x})  {rloser}'
        await gXX(user_id, summ, c)
        await message.answer(txt)
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}')


async def game_spin(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    rwin, rloser = await win_luser()
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    user_id = message.from_user.id

    emojis = ['üé∞', 'üçì', 'üçí', 'üíé', 'üçã', 'üåï', 'üñï', 'üí∞', 'üçé', 'üéÅ', 'üíé', 'üí©', 'üç©', 'üçó', 'üçè', 'üî•', 'üçä']

    try:
        summ = message.text.split()[1].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        return await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã {rloser}')

    if balance < summ:
        return await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ {rloser}')

    gt = await gametime(user_id)
    if gt == 1:
        await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')
        return

    if summ >= 10:
        emojis = [random.choice(emojis) for _ in range(3)]
        emj = '|{}|{}|{}|'.format(*emojis)

        payout = 0
        unique_emojis = set(emojis)
        for emoji in unique_emojis:
            if emoji == 'üíé' or emoji == 'üçã':
                payout += summ * 0.25
            elif emoji == 'üé∞':
                payout += summ
        if len(unique_emojis) == 1:
            payout += summ * 5

        if payout != 0:
            c2 = '{:,}'.format(int(summ + payout)).replace(',', '.')
            await gXX(user_id, 0, payout)
            await message.answer(f'{url}\n{emj} –≤—ã–∏–≥—Ä—ã—à: {c2}$')
        else:
            await message.answer(f'{url}\n{emj} –£–¥–∞—á–∞ –Ω–µ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ. –í—ã–∏–≥—Ä—ã—à: 0$')
            await gXX(user_id, summ, 0)
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}')


async def game_trade(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    rwin, rloser = await win_luser()
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)

    try:
        action = message.text.split()[1]
        summ = message.text.split()[2].replace('–µ', 'e')
        summ = int(float(summ))
    except:
        return await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ —Å—Ç–∞–≤–∫—É –¥–ª—è –∏–≥—Ä—ã {rloser}')

    if action.lower() not in ['–≤–≤–µ—Ä—Ö', '–≤–Ω–∏–∑']:
        return

    if balance < summ:
        return await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –≤–∞—à–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ {rloser}')

    gt = await gametime(user_id)
    if gt == 1:
        await message.answer(f'{url}, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ {rloser}')
        return

    if summ >= 10:
        random_number = random.randint(0, 100)
        random_direction = random.randint(1, 2)

        if random_direction == 1:
            result = '–≤–≤–µ—Ä—Ö' if action.lower() == '–≤–≤–µ—Ä—Ö' else '–≤–Ω–∏–∑'
        else:
            result = '–≤–Ω–∏–∑' if action.lower() == '–≤–≤–µ—Ä—Ö' else '–≤–≤–µ—Ä—Ö'

        if action.lower() == result:
            payout = int(summ + (summ * random_number / 100))
            c2 = '{:,}'.format(payout).replace(',', '.')
            await message.answer(f'{url}\nüìà –ö—É—Ä—Å –ø–æ—à—ë–ª {result} –Ω–∞ {random_number}%\n‚úÖ –í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª - {c2}$')
            await gXX(user_id, 0, payout)
        else:
            payout = int(summ - (summ * random_number / 100))
            await message.answer(f'{url}\nüìà –ö—É—Ä—Å –ø–æ—à—ë–ª {result} –Ω–∞ {random_number}%\n‚ùå –í–∞—à –≤—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª - 0$')
            await gXX(user_id, payout, 0)
    else:
        await message.answer(f'{url}, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 10 {rloser}')