from _decimal import Decimal
from commands.db import getname, getonlibalance, getidname, getads
from commands.main import geturl
from commands.main import win_luser
from commands.ore.db import *


async def sellbtc(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    btc = await getbtc(message)
    url = await geturl(user_id, user_name)
    result = await win_luser()
    rwin, rloser = result

    try:
        summ_btc = int(message.text.split()[2])
    except:
        summ_btc = btc
    summ_btc = Decimal(summ_btc)

    kurs = await getkurs()
    summ = summ_btc * kurs
    summ2 = '{:,}'.format(summ).replace(',', '.')
    summ_btc2 = '{:,}'.format(summ_btc).replace(',', '.')

    if btc >= summ_btc:
        if btc - summ_btc >= 0 and summ_btc > 0:
            await sellbtc_db(summ, summ_btc, user_id)
            await message.answer(f'{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ {summ_btc2} BTC –∑–∞ {summ2}$ {rwin}')
        else:
            await message.answer(f'{url}, –Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞–≤–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –∂–µ –Ω—É–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC {rloser}')
    else:
        await message.answer(f'{url}, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å —Å—Ç–æ–ª—å–∫–æ BTC {rloser}')


async def buybtc(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    balance = await getonlibalance(message)
    url = await geturl(user_id, user_name)
    result = await win_luser()
    rwin, rloser = result

    try:
        summ_btc = int(message.text.split()[2])
    except:
        await message.answer(f'{url}, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å {rloser}')
        return
    summ_btc = Decimal(summ_btc)

    kurs = await getkurs()
    summ = summ_btc * kurs
    summ2 = '{:,}'.format(summ).replace(',', '.')
    summ_btc2 = '{:,}'.format(summ_btc).replace(',', '.')

    if balance >= summ:
        if summ_btc > 0:
            await bybtc_db(summ, summ_btc, user_id)
            await message.answer(f'{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ {summ_btc2} BTC –∑–∞ {summ2}$ {rwin}')
        else:
            await message.answer(f'{url}, –Ω–µ–ª—å–∑—è –ø–æ–∫—É–ø–∞—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ –∏–ª–∏ –∂–µ –Ω—É–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC {rloser}')
    else:
        await message.answer(f'{url}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ BTC {rloser}')


async def btc_kurs(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)
    kurs = await getkurs()
    ads = await getads(message)
    kurs = '{:,}'.format(kurs).replace(',', '.')
    await message.answer(f'{url}, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å 1 BTC —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç - {kurs}$ üåê\n\n{ads}', disable_web_page_preview=True)
