import random
from assets.antispam import antispam
from commands.db import getname, setname, bonus_db, getads, top_db, get_colvo_users, getstatus
from commands.main import geturl
from commands.main import win_luser
from assets.gettime import bonustime, kaznatime
from commands.assets.transform import transform


async def shar_cmd(message):
    list = ["–ú–æ–π –æ—Ç–≤–µ—Ç - –Ω–µ—Ç", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –¥–∞", "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è - –Ω–µ—Ç", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç - –Ω–µ—Ç", "–î–∞", "–ù–µ—Ç", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º"]
    await message.answer(random.choice(list))


@antispam
async def setname_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    rwin, rloser = await win_luser()
    url = await geturl(user_id, user_name)
    try:
        name = " ".join(message.text.split()[2:])
    except:
        await message.answer(f'{url}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ {rloser}')
        return

    status_limits = {0: 20, 1: 25, 2: 30, 3: 45, 4: 50}
    status = await getstatus(message.from_user.id)
    climit = status_limits.get(status, status_limits[0])

    name = name.replace('<', '').replace('>', '').replace('@', '').replace('t.me', '').replace('http', '')
    if len(name) < 5:
        await message.answer(f'{url}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–æ—Ä–æ—á–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ {rloser}')
        return
    if len(name) > climit:
        await message.answer(f'{url}, –≤–∞—à –Ω–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–Ω–µ–µ {climit} —Å–∏–º–≤–æ–ª–æ–≤ {rloser}')
        return
    await setname(name, user_id)
    await message.answer(f'–í–∞—à –Ω–∏–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ¬´{name}¬ª')


async def kazna_cmd(message):
    await message.answer(f'üí∞ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–∞–∑–Ω–∞ —à—Ç–∞—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 98.894.419.531.599.545')


@antispam
async def ogr_kazna(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)

    bt, left = await kaznatime(user_id)
    if bt == 1:
        await message.answer(f'{url}, –≤—ã —É–∂–µ –≥—Ä–∞–±–∏–ª–∏ –∫–∞–∑–Ω—É —Å–µ–≥–æ–¥–Ω—è. –ë–µ–≥–∏—Ç–µ —Å–∫–æ—Ä–µ–µ, –ø–æ–ª–∏—Ü–∏—è —É–∂–µ –≤ –ø—É—Ç–∏ üö´')
        return

    i = random.randint(1, 3)
    if i == 1:
        await message.answer( f'{url}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –∫–∞–∑–Ω—É ‚ùé')
        return

    summ = random.randint(100000000, 400000000)
    summ2 = '{:,}'.format(summ).replace(',', '.')

    await bonus_db(user_id, 'users', 'balance', summ)
    await message.answer(f'{url}, –≤—ã —É—Å–ø–µ—à–Ω–æ –æ–≥—Ä–∞–±–∏–ª–∏ –∫–∞–∑–Ω—É. –ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ {summ2} ‚úÖ')


@antispam
async def bonus_cmd(message):
    user_name = await getname(message)
    user_id = message.from_user.id
    url = await geturl(user_id, user_name)

    bt, left = await bonustime(user_id)
    if bt == 1:
        hours = left // 3600
        minutes = (left % 3600) // 60
        if hours > 0:
            await message.answer(f'{url}, —Ç—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª(-–∞) –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å, —Å–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ {hours}—á {minutes}–º')
        else:
            await message.answer(f'{url}, —Ç—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª(-–∞) –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å, —Å–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ {minutes}–º')
        return

    i = random.randint(1, 4)
    if i == 1:
        table = 'users'
        v = 'balance'
        summ = random.randint(1000000, 4000000)
        summ2 = '{:,}'.format(summ).replace(',', '.')
        txt = f'–≤ —Ä–∞–∑–º–µ—Ä–µ {summ2}'
    elif i == 2:
        table = 'users'
        v = 'rating'
        summ = random.randint(100, 950)
        txt = f'–≤ —Ä–∞–∑–º–µ—Ä–µ {summ} —Ä–µ–π—Ç–∏–Ω–≥–∞ üëë'
    elif i == 3:
        table = 'users'
        v = 'case1'
        summ = random.randint(1, 10)
        txt = f'–≤ —Ä–∞–∑–º–µ—Ä–µ –æ–±—ã—á–Ω—ã–π –∫–µ–π—Å  - {summ} üì¶'
    else:
        table = 'mine'
        v = 'matter'
        summ = random.randint(1, 10)
        txt = f'–≤ —Ä–∞–∑–º–µ—Ä–µ {summ} –º–∞—Ç–µ—Ä–∏–∏ üåå'

    await bonus_db(user_id, table, v, summ)
    await message.answer(f'{url}, –≤–∞–º –±—ã–ª –≤—ã–¥–∞–Ω –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å {txt}')


@antispam
async def stats_cmd(message):
    users, chats, uchats = await get_colvo_users()

    users = '{:,}'.format(users).replace(',', '.')
    chats = '{:,}'.format(chats).replace(',', '.')
    uchats = '{:,}'.format(uchats).replace(',', '.')

    await message.answer(f'''üìä –ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞: {users}
üìä –û–±—â–µ–µ –∫–æ–ª-–≤–æ —á–∞—Ç–æ–≤: {chats}
üìä –û–±—â–µ–µ –∫–æ–ª-–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –±–µ—Å–µ–¥–∞—Ö: {uchats}''')


@antispam
async def top_command(message):
    userinfo, top_players = await top_db(message)
    user_id = message.from_user.id
    ads = await getads(message)
    user_name = await getname(message)
    url = await geturl(user_id, user_name)

    user_position = None
    for i, player in enumerate(top_players, start=1):
        if player[0] == user_id:
            user_position = i
            break

    top_message = f"{url}, —Ç–æ–ø 10 –∏–≥—Ä–æ–∫–æ–≤:\n"
    emojis = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]

    for i, player in enumerate(top_players[:10], start=1):
        tb = await transform(player[2])
        position_emoji = emojis[i - 1]
        top_message += f"{position_emoji} {player[1]} ‚Äî üëë{player[13]} | {tb}\n"

    top_message += f"‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"

    if user_position is not None and user_position <= 10:
        tb = await transform(userinfo[2])
        position_emoji = emojis[user_position - 1]
        top_message += f"{position_emoji} {userinfo[1]} ‚Äî üëë{userinfo[13]} | {tb}"
    else:
        tb = await transform(userinfo[2])
        top_message += f"‚û°Ô∏è1Ô∏è‚É£0Ô∏è‚É£0Ô∏è‚É£ {userinfo[1]} ‚Äî üëë{userinfo[13]} | {tb}"

    top_message += f'\n\n{ads}'

    await message.answer(top_message, disable_web_page_preview=True)